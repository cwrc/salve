{"version":3,"file":"choice.js","sourceRoot":"","sources":["../../../../../lib/salve/patterns/choice.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Pattern and walker for RNG's ``choice`` elements.\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\nimport { ChoiceError, ValidationError } from \"../errors\";\nimport * as namePatterns from \"../name_patterns\";\nimport { NameResolver } from \"../name_resolver\";\nimport { union } from \"../set\";\nimport { EndResult, EventSet, InternalFireEventResult, InternalWalker,\n         isAttributeEvent, Pattern, TwoSubpatterns } from \"./base\";\nimport { Empty } from \"./empty\";\n\n/**\n * A pattern for ``<choice>``.\n */\nexport class Choice extends TwoSubpatterns {\n  private readonly optional: boolean;\n\n  constructor(xmlPath: string, patA: Pattern, patB: Pattern) {\n    super(xmlPath, patA, patB);\n    this.optional = patA instanceof Empty;\n  }\n\n  protected _computeHasEmptyPattern(): boolean {\n    return this.patA.hasEmptyPattern() || this.patB.hasEmptyPattern();\n  }\n\n  newWalker(): InternalWalker {\n    const hasAttrs = this.hasAttrs();\n    const walkerB = this.patB.newWalker();\n    if (this.optional) {\n      // tslint:disable-next-line:no-use-before-declare\n      return new OptionalChoiceWalker(this,\n                                      walkerB,\n                                      hasAttrs,\n                                      false,\n                                      true,\n                                      true);\n    }\n    else {\n      const walkerA = this.patA.newWalker();\n\n      // tslint:disable-next-line:no-use-before-declare\n      return new ChoiceWalker(this,\n                              walkerA,\n                              walkerB,\n                              hasAttrs,\n                              false,\n                              false,\n                              !hasAttrs || walkerA.canEndAttribute ||\n                              walkerB.canEndAttribute,\n                              walkerA.canEnd || walkerB.canEnd);\n    }\n  }\n}\n\n/**\n * Walker for [[Choice]].\n */\nclass ChoiceWalker implements InternalWalker {\n  constructor(protected readonly el: Choice,\n              private readonly walkerA: InternalWalker,\n              private readonly walkerB: InternalWalker,\n              private readonly hasAttrs: boolean,\n              private deactivateA: boolean,\n              private deactivateB: boolean,\n              public canEndAttribute: boolean,\n              public canEnd: boolean)\n  {}\n\n  clone(): this {\n    return new ChoiceWalker(this.el,\n                            this.walkerA.clone(),\n                            this.walkerB.clone(),\n                            this.hasAttrs,\n                            this.deactivateA,\n                            this.deactivateB,\n                            this.canEndAttribute,\n                            this.canEnd) as this;\n  }\n\n  possible(): EventSet {\n    const walkerA = this.walkerA;\n    let ret = this.deactivateA ? undefined : walkerA.possible();\n\n    const walkerB = this.walkerB;\n    if (!this.deactivateB) {\n      const possibleB = walkerB.possible();\n      if (ret === undefined) {\n        ret = possibleB;\n      }\n      else {\n        union(ret, possibleB);\n      }\n    }\n    else if (ret === undefined) {\n      ret = new Set();\n    }\n\n    return ret;\n  }\n\n  possibleAttributes(): EventSet {\n    const walkerA = this.walkerA;\n    let ret = this.deactivateA ? undefined : walkerA.possibleAttributes();\n\n    const walkerB = this.walkerB;\n    if (!this.deactivateB) {\n      const possibleB = walkerB.possibleAttributes();\n      if (ret === undefined) {\n        ret = possibleB;\n      }\n      else {\n        union(ret, possibleB);\n      }\n    }\n    else if (ret === undefined) {\n      ret = new Set();\n    }\n\n    return ret;\n  }\n\n  fireEvent(name: string, params: string[],\n            nameResolver: NameResolver): InternalFireEventResult {\n    //\n    // It cannot happen that fireEvent be called when deactivateA and\n    // deactivateB are true at the same time.\n    //\n    // if (this.deactivateA && this.deactivateB) {\n    //   return new InternalFireEventResult(false);\n    // }\n\n    if (!this.hasAttrs && isAttributeEvent(name)) {\n      return new InternalFireEventResult(false);\n    }\n\n    const { walkerA, walkerB } = this;\n    const retA = this.deactivateA ? new InternalFireEventResult(false) :\n      walkerA.fireEvent(name, params, nameResolver);\n    const retB = this.deactivateB ? new InternalFireEventResult(false) :\n      walkerB.fireEvent(name, params, nameResolver);\n\n    if (retA.matched) {\n      if (!retB.matched) {\n        this.deactivateB = true;\n        this.canEndAttribute = walkerA.canEndAttribute;\n        this.canEnd = walkerA.canEnd;\n      }\n      else {\n        this.canEndAttribute = walkerA.canEndAttribute ||\n          walkerB.canEndAttribute;\n        this.canEnd = walkerA.canEnd || walkerB.canEnd;\n      }\n\n      return retA.combine(retB);\n    }\n\n    if (retB.matched) {\n      this.deactivateA = true;\n      this.canEndAttribute = walkerB.canEndAttribute;\n      this.canEnd = walkerB.canEnd;\n    }\n\n    return retB.combine(retA);\n  }\n\n  end(): EndResult {\n    if (this.canEnd) {\n      // Instead of an ended flag, we set both flags.\n      this.deactivateA = true;\n      this.deactivateB = true;\n\n      return false;\n    }\n\n    const retA = this.deactivateA ? false : this.walkerA.end();\n    const retB = this.deactivateB ? false : this.walkerB.end();\n\n    if (!retA) {\n      return retB;\n    }\n\n    if (!retB) {\n      return retA;\n    }\n\n    // If we are here both walkers exist and returned an error. We combine the\n    // errors no matter which walker may have been deactivated.\n    const combined = this.combineChoices();\n\n    return combined.length !== 0 ? combined : retA;\n  }\n\n  endAttributes(): EndResult {\n    if (this.canEndAttribute) {\n      return false;\n    }\n\n    const retA = this.deactivateA ? false : this.walkerA.endAttributes();\n    const retB = this.deactivateB ? false : this.walkerB.endAttributes();\n\n    if (!retA) {\n      return retB;\n    }\n\n    if (!retB) {\n      return retA;\n    }\n\n    // If we are here both walkers exist and returned an error. We combine the\n    // errors no matter which walker may have been deactivated.\n    const combined = this.combineChoices();\n\n    return combined.length !== 0 ? combined : retA;\n  }\n\n  private combineChoices(): ValidationError[] {\n    const namesA: namePatterns.Base[] = [];\n    const values: (string|RegExp)[] = [];\n    for (const ev of this.walkerA.possible()) {\n      switch (ev.name) {\n        case \"enterStartTag\":\n        case \"attributeName\":\n          namesA.push(ev.param);\n          break;\n        case \"attributeValue\":\n        case \"text\":\n          values.push(ev.param);\n          break;\n        default:\n          return []; // We cannot make a good combination.\n      }\n    }\n\n    const namesB: namePatterns.Base[] = [];\n    for (const ev of this.walkerB.possible()) {\n      switch (ev.name) {\n        case \"enterStartTag\":\n        case \"attributeName\":\n          namesB.push(ev.param);\n          break;\n        case \"attributeValue\":\n        case \"text\":\n          values.push(ev.param);\n          break;\n        default:\n          return []; // We cannot make a good combination.\n      }\n    }\n\n    return [\n      values.length !== 0 ?\n        new ValidationError(\n            `one value required from the following: ${values.join(\", \")}`) :\n        new ChoiceError(namesA, namesB),\n    ];\n  }\n}\n\n/**\n * Walker for [[Choice]].\n */\nclass OptionalChoiceWalker implements InternalWalker {\n  constructor(protected readonly el: Choice,\n              private readonly walkerB: InternalWalker,\n              private readonly hasAttrs: boolean,\n              private ended: boolean,\n              public canEndAttribute: boolean,\n              public canEnd: boolean) {}\n\n  clone(): this {\n    return new OptionalChoiceWalker(this.el,\n                                    this.walkerB.clone(),\n                                    this.hasAttrs,\n                                    this.ended,\n                                    this.canEndAttribute,\n                                    this.canEnd) as this;\n  }\n\n  possible(): EventSet {\n    return this.ended ? new Set() : this.walkerB.possible();\n  }\n\n  possibleAttributes(): EventSet {\n    return this.ended ? new Set() : this.walkerB.possibleAttributes();\n  }\n\n  fireEvent(name: string, params: string[],\n            nameResolver: NameResolver): InternalFireEventResult {\n    //\n    // It cannot happen that fireEvent is called with ended true.\n    //\n    // if (this.ended) {\n    //   return new InternalFireEventResult(false);\n    // }\n    //\n\n    if (!this.hasAttrs && isAttributeEvent(name)) {\n      return new InternalFireEventResult(false);\n    }\n\n    if (name === \"text\" && !/\\S/.test(params[0])) {\n      return new InternalFireEventResult(true);\n    }\n\n    const { walkerB } = this;\n    const retB = walkerB.fireEvent(name, params, nameResolver);\n    if (retB.matched) {\n      this.canEndAttribute = walkerB.canEndAttribute;\n      this.canEnd = walkerB.canEnd;\n    }\n\n    return retB;\n  }\n\n  end(): EndResult {\n    if (this.canEnd) {\n      this.ended = true;\n\n      return false;\n    }\n\n    return this.walkerB.end();\n  }\n\n  endAttributes(): EndResult {\n    return this.canEndAttribute ? false : this.walkerB.endAttributes();\n  }\n}\n\n//  LocalWords:  RNG's MPL retA ChoiceWalker enterStartTag notAChoiceError\n//  LocalWords:  tslint ChoiceError\n"]}