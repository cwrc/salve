{"version":3,"file":"read.js","sourceRoot":"","sources":["../../../../../lib/salve/json-format/read.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This module contains utilities for reading salve's internal schema format.\n *\n * @author Louis-Dominique Dubeau\n * @license MPL 2.0\n * @copyright Mangalam Research Center for Buddhist Languages\n */\n\nimport { Grammar } from \"../patterns\";\nimport { fixPrototype } from \"../tools\";\nimport { codeToConstructor, OPTION_NO_PATHS, PatternCtor } from \"./common\";\n\nclass OldFormatError extends Error {\n  constructor() {\n    super(\"your schema file must be recreated with a newer \" +\n          \"version of salve-convert\");\n    fixPrototype(this, OldFormatError);\n  }\n}\n\ntype KindAndArgs = [number, ...any[]];\n\n/**\n * A class for walking the JSON object representing a schema.\n */\nclass V2JSONWalker {\n  private readonly addPath: boolean;\n  /**\n   *\n   * @param options The options object from the file that contains the\n   * schema.\n   */\n  constructor(private options: number) {\n    // tslint:disable-next-line:no-bitwise\n    this.addPath = (this.options & OPTION_NO_PATHS) !== 0;\n  }\n\n  /**\n   * Walks a V2 representation of a JavaScript object.\n   *\n   * @param array The array representing the object.\n   *\n   * @throws {Error} If the object is malformed.\n   *\n   * @returns The return value of [[V2JSONWalker._processObject]].\n   */\n  walkObject(array: KindAndArgs): unknown {\n    const kind = array[0];\n    const ctor = codeToConstructor[kind];\n    if (ctor === undefined) {\n      if (array.length < 1) {\n        throw new Error(\"array too small to contain object\");\n      }\n      throw new Error(`undefined type: ${kind}`);\n    }\n\n    if (ctor === Array) {\n      throw new Error(\"trying to build array with walkObject\");\n    }\n\n    // This can happen for Empty, Text, notAllowed when the JSON was generated\n    // without path information.\n    if (array.length === 1) {\n      return this._processObject(kind, ctor as PatternCtor, [\"\"]);\n    }\n\n    const args = array.slice(1);\n    this._transformArray(args);\n    return this._processObject(kind, ctor as PatternCtor,\n                               this.addPath ? [\"\", ...args] :\n                               args as PathAndArgs);\n  }\n\n  /**\n   * Processes an object. Derived classes will want to override this method to\n   * perform their work.\n   *\n   * @param kind The object \"kind\". A numeric code.\n   *\n   * @param ctor The object's constructor.\n   *\n   * @param args The arguments that should be passed to the constructor.\n   *\n   * @returns If the ``V2JSONWalker`` instance is meant to convert the JSON\n   * data, then this method should return an Object. If the ``V2JSONWalker``\n   * instance is meant to check the JSON data, then it should return\n   * ``undefined``.\n   */\n  _processObject(kind: number, ctor: PatternCtor, args: PathAndArgs): unknown {\n    return undefined; // Do nothing\n  }\n\n  _transformArray(arr: unknown[]): void {\n    const limit = arr.length;\n    for (let elIx = 0; elIx < limit; elIx++) {\n      let el = arr[elIx];\n      if (el instanceof Array) {\n        if (el[0] !== 0) {\n          arr[elIx] = this.walkObject(el as KindAndArgs);\n        }\n        else {\n          arr[elIx] = el = el.slice(1);\n          this._transformArray(el as any[]);\n        }\n      }\n    }\n  }\n}\n\ntype PathAndArgs = [string, ...any[]];\ntype ArgFilter = (args: PathAndArgs) => PathAndArgs;\n\nfunction namedOnePatternFilter(args: PathAndArgs): PathAndArgs {\n  // Same thing as for OneOrMore, but for these elements the array of patterns\n  // is at index 2 rather than index 1 because index 1 contains a name.\n  if (args[2].length !== 1) {\n    throw new Error(\"PatternOnePattern with an array of patterns that \" +\n                    \"contains other than 1 pattern\");\n  }\n\n  return [args[0], args[1], args[2][0]];\n}\n\nfunction twoPatternFilter(args: PathAndArgs): PathAndArgs {\n  if (args[1].length !== 2) {\n    throw new Error(\"PatternTwoPatterns with an array of patterns that \" +\n                    \"contains other than 2 pattern\");\n  }\n\n  return [args[0], args[1][0], args[1][1]];\n}\n\nconst kindToArgFilter: (ArgFilter | undefined)[] = [\n  undefined, // Array\n  undefined, // Empty,\n  // Data\n  (args: PathAndArgs) => {\n    if (args.length >= 4) {\n      // Parameters are represented as an array of strings in the file.\n      // Transform this array of strings into an array of objects.\n      const params = args[3];\n      if (params.length % 2 !== 0) {\n        throw new Error(\"parameter array length not a multiple of 2\");\n      }\n\n      // tslint:disable-next-line: prefer-array-literal\n      const newParams = new Array(params.length / 2);\n      const limit = params.length;\n      for (let i = 0; i < limit; i += 2) {\n        newParams[i / 2] = { name: params[i], value: params[i + 1] };\n      }\n\n      args[3] = newParams;\n    }\n\n    return args;\n  },\n  undefined, // List,\n  undefined, // Param,\n  undefined, // Value,\n  undefined, // NotAllowed,\n  undefined, // Text,\n  undefined, // Ref,\n  // OneOrMore\n  (args: PathAndArgs) => {\n    //\n    // In the file we have two arguments: the XML path, an array of length 1\n    // that contains the one subpattern.\n    //\n    // Here we ditch the array and replace it with its lone subpattern.\n    //\n    if (args[1].length !== 1) {\n      throw new Error(\"OneOrMore with an array of patterns that \" +\n                      \"contains other than 1 pattern\");\n    }\n\n    return [args[0], args[1][0]];\n  },\n  twoPatternFilter, // Choice,\n  twoPatternFilter, // Group,\n  namedOnePatternFilter, // Attribute\n  namedOnePatternFilter, // Element,\n  namedOnePatternFilter, // Define,\n  undefined, // Grammar,\n  undefined, // EName,\n  twoPatternFilter, // Interleave,\n\n  //\n  // The name pattern filters all drop the path information.\n  //\n\n  // Name,\n  (args: PathAndArgs) => args.slice(1),\n  // NameChoice,\n  (args: PathAndArgs) => {\n    if (args[1].length !== 2) {\n      throw new Error(\"NameChoice with an array of patterns that \" +\n                      \"contains other than 2 pattern\");\n    }\n\n    return args[1];\n  },\n  // NsName,\n  (args: PathAndArgs) => args.slice(1),\n  // AnyName,\n  (args: PathAndArgs) => args.slice(1),\n];\n\n/**\n * A JSON walker that constructs a pattern tree as it walks the JSON object.\n *\n * @private\n */\nclass V2Constructor extends V2JSONWalker {\n  _processObject(kind: number, ctor: PatternCtor, args: PathAndArgs): unknown {\n    const filter = kindToArgFilter[kind];\n\n    return new ctor(...(filter === undefined ? args : filter(args)));\n  }\n}\n\n/**\n * Constructs a tree of patterns from the data structure produced by running\n * ``salve-convert`` on an RNG file.\n *\n * @param code The JSON representation (a string) or the deserialized JSON.\n *\n * @throws {Error} When the version of the data is not supported.\n *\n * @returns The tree.\n */\nexport function readTreeFromJSON(code: string | {}): Grammar {\n  const parsed = (typeof code === \"string\" ? JSON.parse(code) : code);\n  if (typeof parsed === \"object\" && parsed.v === undefined) {\n    throw new OldFormatError(); // version 0\n  }\n\n  const { v: version, o: options, d: data } = parsed;\n  if (version === 3) {\n    return new V2Constructor(options).walkObject(data) as Grammar;\n  }\n\n  throw new Error(`unknown version: ${version}`);\n}\n\n//  LocalWords:  deserialized PatternTwoPatterns PatternOnePattern OneOrMore js\n//  LocalWords:  codeToConstructor nameToConstructor RNG subpattern JSON xsl\n//  LocalWords:  rng MPL\n"]}